kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccountName: "{{ .Values.serviceAccountName }}"
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        env:
        - name: LISTEN_ON
          value: "{{ .Values.listenOn }}"
        - name: STORAGE_TYPE
          value: "{{ .Values.storageType }}"
        - name: STORAGE_REDIS_ADDRESS
          value: "{{ .Values.storageRedisAddress }}"
        - name: STORAGE_REDIS_PASSWORD
          value: "{{ .Values.storageRedisPassword }}"
        - name: STORAGE_REDIS_DATABASE
          value: "{{ .Values.storageRedisDatabase }}"
        - name: CATALOG_LABEL
          value: mesitis/kind=catalog-entry
        - name: TMPDIR
          value: "{{ .Values.tmpdir }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        #{{- if .Values.tls.cert}}
        #- --tlsCert
        #- "{{ .Values.tls.cert }}"
        #{{- end}}
        #{{- if .Values.tls.key}}
        #- --tlsKey
        #- "{{ .Values.tls.key }}"
        #{{- end}}
        - --alsologtostderr
        - "true"
        - --stderrthreshold
        - "INFO"
        ports:
        - containerPort: 8080
        readinessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
